<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveModifiedFiles</string>
	<key>command</key>
	<string># this command calls xcodebuild giving the name of the project
# directory as the project to build and parses the output for
# file/line information then plays a succes/failure sample
# based on the final outcome

# if there is no TM project, scan up the parent directories looking for an Xcode project
if [[ -z $TM_PROJECT_FILEPATH ]]; then
	until [[ `pwd` == "/" ]];
	do
		Projects=`ls *.xcode`
#		echo "Projects:" $Projects
#		echo "&lt;br&gt;"
		if [[ -n $Projects ]]; then
			break;
		fi
		cd ..;
	done
	PROJECT_FILE=""
else
	PROJECT_FILE=`basename "$TM_PROJECT_DIRECTORY"`
	if [[ -d $PROJECT_FILE ]]; then
		echo ""
#		echo using project directory
	else
		PROJECT_FILE=$(basename "$TM_PROJECT_FILEPATH" | perl -pe 's/.tmproj//')
#		echo using "$PROJECT_FILE"
	fi

	PROJECT_PARAM=$(echo -project "$PROJECT_FILE.xcode")
#	echo $PROJECT_PARAM "&lt;br&gt;"
fi

BUILD_STYLE="Deployment"

# If we have an Xcode project, and it doesn't contain the build style we're looking for,
# accept the active build style in the project.
if [[ -d $PROJECT_FILE ]] &amp;&amp; grep -r $BUILD_STYLE "$PROJECT_FILE"; then
	BUILD_STYLE="-buildstyle $BUILD_STYLE";
else
	BUILD_STYLE="-activebuildstyle"
fi

export PROJECT_FILE

xcodebuild $PROJECT_PARAM $BUILD_STYLE 2&gt;&amp;1| ruby -- "${TM_BUNDLE_PATH}/bin/format_build.rb"
</string>
	<key>input</key>
	<string>none</string>
	<key>keyEquivalent</key>
	<string>@b</string>
	<key>name</key>
	<string>Build (using xcodebuild)</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>uuid</key>
	<string>9656317E-73EB-11D9-9848-000D93589AF6</string>
</dict>
</plist>
