<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>bundleUUID</key>
	<string>4679484F-6227-11D9-BFB1-000D93589AF6</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
line = STDIN.read

offset = ENV['TM_INPUT_START_COLUMN'].to_i - 1

def match_iter(rgxp,str)
  offset = 0
  while m = str.match(rgxp)
    yield [m[0], m.begin(0) + offset, m[0].length]
    str = m.post_match
    offset += m.end(0)
  end
end

pat = /("(\\.|[^"\\])*"|\[|\]|@selector\([^\)]*\)|[a-zA-Z][a-zA-Z0-9]*:)/
up = 0
list = []

match_iter(pat , line[1..line.length]) do |tok, beg, len|
  t = tok[0].chr
  if t == "["
    up +=1
  elsif t == "]"
    up -=1
  elsif t !='"' and t !='@' and up == 0
    list &lt;&lt; [beg +1,len]
  end
end

list &lt;&lt; [line.length,0]

if list.length &gt; 2
  print line[0...list[1][0]].strip
  #check to if the first "selector:" is not in the first line
  if k = line[0...list[0][0]].rindex("\n")
    firstIndex = list[0][0]+list[0][1]- k -1
    offset = 0
  else
    firstIndex = list[0][0] + list [0][1]
  end
  (1..(list.length() -2)).each do |ind|
    list[ind][1]+list[ind][0]
    b = (b = firstIndex-list[ind][1]+offset) &gt; 0 ? b : 0
    print "\n" + " "*b + line[(list[ind][0])...(list[ind+1][0])].strip
  end
else
  print line
end
</string>
	<key>fallbackInput</key>
	<string>scope</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^q</string>
	<key>name</key>
	<string>Method Call</string>
	<key>output</key>
	<string>replaceSelectedText</string>
	<key>scope</key>
	<string>meta.bracketed.objc</string>
	<key>uuid</key>
	<string>8957C99F-88F5-42CC-B355-AAC6BF3FDF8D</string>
</dict>
</plist>
