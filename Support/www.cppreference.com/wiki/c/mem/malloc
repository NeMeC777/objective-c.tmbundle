<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
 lang="en" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>c:mem:malloc</title>
<meta name="generator" content="DokuWiki Release 2009-02-14b" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-06-17T17:23:39-0700" />
<meta name="keywords" content="c,mem,malloc" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/c/mem/malloc?do=index" title="Index" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=c:mem" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/c/mem/malloc" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/c/mem/malloc" />
<link rel="stylesheet" media="all" type="text/css" href="../../lib/exe/css.php@s=all&amp;t=custom1" />
<link rel="stylesheet" media="screen" type="text/css" href="../../lib/exe/css.php@t=custom1" />
<link rel="stylesheet" media="print" type="text/css" href="../../lib/exe/css.php@s=print&amp;t=custom1" />
<script type="text/javascript" charset="utf-8" src="../../lib/exe/js.php@edit=0&amp;write=1" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="malloc" id="malloc">malloc</a></h2>
<div class="level2">

<p>
Syntax:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;cstdlib&gt;</span>
    <span class="kw4">void</span> <span class="sy0">*</span>malloc<span class="br0">&#40;</span> size_t size <span class="br0">&#41;</span>;</pre>
<p>
The function malloc() returns a pointer to a chunk of memory of size size, or
NULL if there is an error. The memory pointed to will be on the heap, not the
stack, so make sure to free it when you are done with it. An example:
</p>
<pre class="c code c++" style="font-family:monospace;">     <span class="kw4">typedef</span> <span class="kw4">struct</span> data_type <span class="br0">&#123;</span>
       <span class="kw4">int</span> age;
       <span class="kw4">char</span> name<span class="br0">&#91;</span><span class="nu0">20</span><span class="br0">&#93;</span>;
     <span class="br0">&#125;</span> data;
&nbsp;
     data <span class="sy0">*</span>bob;
     bob <span class="sy0">=</span> <span class="br0">&#40;</span>data<span class="sy0">*</span><span class="br0">&#41;</span> malloc<span class="br0">&#40;</span> <span class="kw4">sizeof</span><span class="br0">&#40;</span>data<span class="br0">&#41;</span> <span class="br0">&#41;</span>;
     <span class="kw1">if</span><span class="br0">&#40;</span> bob <span class="sy0">!=</span> <span class="kw2">NULL</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
       bob<span class="sy0">-&gt;</span>age <span class="sy0">=</span> <span class="nu0">22</span>;
       strcpy<span class="br0">&#40;</span> bob<span class="sy0">-&gt;</span>name<span class="sy0">,</span> <span class="st0">&quot;Robert&quot;</span> <span class="br0">&#41;</span>;
       <a href="http://www.opengroup.org/onlinepubs/009695399/functions/printf.html"><span class="kw3">printf</span></a><span class="br0">&#40;</span> <span class="st0">&quot;%s is %d years old<span class="es0">\n</span>&quot;</span><span class="sy0">,</span> bob<span class="sy0">-&gt;</span>name<span class="sy0">,</span> bob<span class="sy0">-&gt;</span>age <span class="br0">&#41;</span>;
     <span class="br0">&#125;</span>
     free<span class="br0">&#40;</span> bob <span class="br0">&#41;</span>;</pre>
<p>
NOTE that new/delete is preferred in C++ (as opposed to malloc/free in C).
</p>
<pre class="code"> 
</pre>

<p>

Related Topics: <a href="calloc" class="wikilink1" title="c:mem:calloc">calloc</a>, <a href="../../keywords/delete" class="wikilink1" title="keywords:delete">delete</a>, <a href="free" class="wikilink1" title="c:mem:free">free</a>, <a href="../../keywords/new" class="wikilink1" title="keywords:new">new</a>, <a href="realloc" class="wikilink1" title="c:mem:realloc">realloc</a>
</p>

</div>
<!-- SECTION "malloc" [3-] --></div>
</body>
</html>
