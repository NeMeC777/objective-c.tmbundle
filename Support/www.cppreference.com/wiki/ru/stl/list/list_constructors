<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru"
 lang="ru" dir="ltr">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ru:stl:list:list_constructors</title>
<meta name="generator" content="DokuWiki Release 2009-02-14b" />
<meta name="robots" content="index,follow" />
<meta name="date" content="2009-07-17T04:39:57-0700" />
<meta name="keywords" content="ru,stl,list,list_constructors" />
<link rel="search" type="application/opensearchdescription+xml" href="http://www.cppreference.com/wiki/lib/exe/opensearch.php" title="C++ Reference" />
<link rel="start" href="../../../index.html" />
<link rel="contents" href="http://www.cppreference.com/wiki/ru/stl/list/list_constructors?do=index" title="Все страницы" />
<link rel="alternate" type="application/rss+xml" title="Recent Changes" href="http://www.cppreference.com/wiki/feed.php" />
<link rel="alternate" type="application/rss+xml" title="Current Namespace" href="http://www.cppreference.com/wiki/feed.php?mode=list&amp;ns=ru:stl:list" />
<link rel="alternate" type="text/html" title="Plain HTML" href="http://www.cppreference.com/wiki/_export/xhtml/ru/stl/list/list_constructors" />
<link rel="alternate" type="text/plain" title="Wiki Markup" href="http://www.cppreference.com/wiki/_export/raw/ru/stl/list/list_constructors" />
<link rel="stylesheet" media="all" type="text/css" href="../../../lib/exe/css.php@s=all&amp;t=custom1" />
<link rel="stylesheet" media="screen" type="text/css" href="../../../lib/exe/css.php@t=custom1" />
<link rel="stylesheet" media="print" type="text/css" href="../../../lib/exe/css.php@s=print&amp;t=custom1" />
<script type="text/javascript" charset="utf-8" src="../../../lib/exe/js.php@edit=0&amp;write=1" ></script>
</head>
<body>
<div class="dokuwiki export">



<h2><a name="конструкторы_списка" id="конструкторы_списка">Конструкторы списка</a></h2>
<div class="level2">

<p>
Синтаксис:
</p>
<pre class="c code c++" style="font-family:monospace;">    <span class="co2">#include &lt;list&gt;</span>
    list<span class="br0">&#40;</span><span class="br0">&#41;</span>;
    list<span class="br0">&#40;</span> <span class="kw4">const</span> list<span class="sy0">&amp;</span> c <span class="br0">&#41;</span>;
    list<span class="br0">&#40;</span> size_type num<span class="sy0">,</span> <span class="kw4">const</span> TYPE<span class="sy0">&amp;</span> val <span class="sy0">=</span> TYPE<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span>;
    list<span class="br0">&#40;</span> input_iterator start<span class="sy0">,</span> input_iterator end <span class="br0">&#41;</span>;
    ~list<span class="br0">&#40;</span><span class="br0">&#41;</span>;</pre>
<p>
Конструктор по умолчанию не принимает аргументов, он создает новый экземпляр списка.
</p>

<p>
Второй конструктор - конструктор копирования по умолчанию, использующийся для создания нового списка как копии другого.
</p>

<p>
Третий конструктор создает список с местом под num объектов. Если val объявлена,
то каждый из этих объектов будет инициализирован ее значением; в противном случае
объекты получат значение конструктора по умолчанию типа TYPE.
Например, следующий код создает список, состоящий из пяти копий целого числа 42:
</p>
<pre class="c code c++" style="font-family:monospace;">   list <span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> l1<span class="br0">&#40;</span> <span class="nu0">5</span><span class="sy0">,</span> <span class="nu0">42</span> <span class="br0">&#41;</span>;</pre>
<p>
Последний конструктор создает список, состоящий из элементов между start и end. Пример: 
</p>
<pre class="c code c++" style="font-family:monospace;">   <span class="co1">// создаем список из случайных чисел</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;первоначальный список: &quot;</span>;
   list<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> l;
   <span class="kw1">for</span><span class="br0">&#40;</span> <span class="kw4">int</span> i <span class="sy0">=</span> <span class="nu19">0</span>; i <span class="sy0">&lt;</span> <span class="nu0">20</span>; i<span class="sy0">++</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <span class="kw4">int</span> num <span class="sy0">=</span> <span class="br0">&#40;</span><span class="kw4">int</span><span class="br0">&#41;</span> rand<span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">%</span> <span class="nu0">10</span>;
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> num <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span>;
     l.<span class="me1">push_back</span><span class="br0">&#40;</span> num <span class="br0">&#41;</span>;
   <span class="br0">&#125;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl;
&nbsp;
    <span class="co1">// удаляем 5 и 7</span>
   list<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter1 <span class="sy0">=</span> l.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
   <span class="kw1">while</span><span class="br0">&#40;</span> iter1 <span class="sy0">!=</span> l.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     list<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> thisone <span class="sy0">=</span> iter1;
     iter1++;
     <span class="kw1">if</span> <span class="br0">&#40;</span> <span class="sy0">*</span>thisone <span class="sy0">==</span> <span class="nu0">5</span> || <span class="sy0">*</span>thisone <span class="sy0">==</span> <span class="nu0">7</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
        <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;удалили &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>thisone <span class="sy0">&lt;&lt;</span> endl;
        l.<span class="me1">erase</span><span class="br0">&#40;</span> thisone <span class="br0">&#41;</span>;
     <span class="br0">&#125;</span>
   <span class="br0">&#125;</span>
&nbsp;
    <span class="co1">// находим первый четный элемент l</span>
   list<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter2 <span class="sy0">=</span> l.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
   <span class="kw1">while</span><span class="br0">&#40;</span> iter2 <span class="sy0">!=</span> l.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="sy0">*</span>iter2 <span class="sy0">%</span> <span class="nu0">2</span> <span class="sy0">!=</span> <span class="nu19">0</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     iter2++;
   <span class="br0">&#125;</span>
&nbsp;
   <span class="co1">// находим последний четный элемент l</span>
   list<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter3 <span class="sy0">=</span> l.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
   <span class="kw1">do</span> <span class="br0">&#123;</span>
     iter3--;
   <span class="br0">&#125;</span> <span class="kw1">while</span><span class="br0">&#40;</span> iter3 <span class="sy0">!=</span> l.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="sy0">&amp;&amp;</span> <span class="sy0">*</span>iter3 <span class="sy0">%</span> <span class="nu0">2</span> <span class="sy0">!=</span> <span class="nu19">0</span> <span class="br0">&#41;</span>;
&nbsp;
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;первый четный элемент: &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>iter2 <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;, последний четный элемент: &quot;</span> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>iter3 <span class="sy0">&lt;&lt;</span> endl;
&nbsp;
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="st0">&quot;новый список: &quot;</span>;
   list<span class="sy0">&lt;</span>int<span class="sy0">&gt;</span> l2<span class="br0">&#40;</span> iter2<span class="sy0">,</span> iter3 <span class="br0">&#41;</span>;
   list<span class="sy0">&lt;</span>int<span class="sy0">&gt;::</span><span class="me2">iterator</span> iter4 <span class="sy0">=</span> l2.<span class="me1">begin</span><span class="br0">&#40;</span><span class="br0">&#41;</span>;
   <span class="kw1">while</span><span class="br0">&#40;</span> iter4 <span class="sy0">!=</span> l2.<span class="me1">end</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#41;</span> <span class="br0">&#123;</span>
     <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> <span class="sy0">*</span>iter4 <span class="sy0">&lt;&lt;</span> <span class="st0">&quot; &quot;</span>;
     iter4++;
   <span class="br0">&#125;</span>
   <a href="http://www.opengroup.org/onlinepubs/009695399/functions/cout.html"><span class="kw3">cout</span></a> <span class="sy0">&lt;&lt;</span> endl;</pre>
<p>
После запуска код выводит: 
</p>
<pre class="code">
   первоначальный список: 7 9 3 8 0 2 4 8 3 9 0 5 2 2 7 3 7 9 0 2
   удалили 7
   удалили 5
   удалили 7
   удалили 7
   первый четный элемент: 8, последний четный элемент: 2
   новый список: 8 0 2 4 8 3 9 0 2 2 3 9 0</pre>
<p>
Все конструкторы выполняются за <a href="../../../complexity" class="wikilink1" title="complexity">линейное время</a>, кроме первого, который выполняется за 
<a href="../../../complexity" class="wikilink1" title="complexity">константное время</a>.
</p>

<p>
Деструктор списка по умолчанию последовательно вызывает деструктор для каждого объекта списка.
</p>

</div>
</div>
</body>
</html>
